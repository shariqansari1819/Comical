apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// Read credentials
def credentialFile = rootProject.file("credentials.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    signingConfigs {
        release_config {
            storeFile file('/Volumes/Work/Android Work/MyAndroidProjects/ComicalApp/Comical Data/Comical Important Data/ComicalKeystore')
            keyAlias = 'Comical'
            storePassword 'shariq18111997'
            keyPassword 'shariq18111997'
        }
    }
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId "com.codebosses.comical"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 7
        versionName "1.0.7"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "NEWS_API_KEY", credentialProperty['NEWS_API_KEY'])
        buildConfigField("String", "BASE_URL", credentialProperty['BASE_URL'])
        vectorDrawables {
            useSupportLibrary = true
        }
        signingConfig signingConfigs.release_config
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations.all {
        resolutionStrategy {
            cacheDynamicVersionsFor(0, 'seconds')
            cacheChangingModulesFor(0, 'seconds')

            force('com.google.code.gson:gson:2.7')
        }
        transitive = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def multidex_version = "2.0.1"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.multidex:multidex:$multidex_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    // Lifecycle (ViewModel + LiveData)
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    implementation "android.arch.core:core-testing:$lifecycleVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Dagger core
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //RxJava
    /*RxJava lib*/
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.7"
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Ssp and sdp Lib
    implementation "com.intuit.sdp:sdp-android:$sspVerions"
    implementation "com.intuit.ssp:ssp-android:$sspVerions"

//    Other Lib
    implementation 'com.budiyev.android:circular-progress-bar:1.1.8'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'me.zhanghai.android.materialratingbar:library:1.4.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.wajahatkarim3.easyflipviewpager:easyflipviewpager:1.0.0'
    implementation project(':progress-dialog')
    implementation 'com.codemybrainsout.rating:ratingdialog:1.0.8'
    implementation 'com.github.sujithkanna:smileyrating:1.6.8'


//    Facebook Lib
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'

//    Firebase Lib
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-messaging:20.1.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

//    Play services Lib
    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
